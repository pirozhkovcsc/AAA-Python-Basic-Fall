import click
from functools import wraps
from random import randint
from pizza import Margherita, Pepperoni, Hawaiian

# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–ª–∞—Å—Å–∞–º –ø–∏—Ü—Ü
pizza_classes = {
    "margherita": Margherita,
    "pepperoni": Pepperoni,
    "hawaiian": Hawaiian
}


def log(arg=None):
    def decorator(func):
        @wraps(func)
        def wrapper(*args, **kwargs):
            time = randint(1, 5)  # —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç 1 –¥–æ 5 —Å–µ–∫—É–Ω–¥
            if callable(arg):
                # –ï—Å–ª–∏ arg - callable (—Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ —Å–∫–æ–±–æ–∫),
                # —Ç–æ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–Ω –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
                # –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤

                print(f"{func.__name__} - {time}—Å")
                return func(*args, **kwargs)
            else:
                # –ò–Ω–∞—á–µ, arg —Å—á–∏—Ç–∞–µ—Ç—Å—è —à–∞–±–ª–æ–Ω–æ–º –¥–ª—è –≤—ã–≤–æ–¥–∞
                print(arg.format(time))
                return func(*args, **kwargs)

        return wrapper

    if callable(arg):
        return decorator(arg)

    return decorator


@log("üë®‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}—Å!")
def bake(pizza) -> None:
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É."""
    pass


@log("üöó –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!")
def delivery(pizza) -> None:
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É."""
    pass


@log("ü§ó –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!")
def pickup(pizza) -> None:
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""
    pass


@click.group()
def cli():
    pass


@cli.command()
@click.option(
    "--delivery_flag",
    default=False,
    is_flag=True,
    help="–î–æ—Å—Ç–∞–≤–∏—Ç—å –ø–∏—Ü—Ü—É."
)
@click.argument(
    "pizza_type",
    nargs=1
)
def order(pizza_type: str, delivery_flag: bool):
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É."""
    pizza_class = pizza_classes.get(pizza_type.lower())
    if not pizza_class:
        raise click.ClickException(f"–ü–∏—Ü—Ü–∞ —Ç–∏–ø–∞ '{pizza_type}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    pizza = pizza_class()

    bake(pizza)

    if delivery_flag:
        delivery(pizza)
    else:
        pickup(pizza)


@cli.command()
def menu():
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∏—Ü—Ü."""
    for name, cls in pizza_classes.items():
        pizza = cls()
        print(
            f"{name.capitalize()}{pizza.emoji}: {', '.join(pizza.ingredients)}"
        )


if __name__ == "__main__":
    cli()
